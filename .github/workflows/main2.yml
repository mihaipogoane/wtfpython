name: Streamlink

on:
  schedule:
    - cron: "*/10 * * * *"
  workflow_dispatch:

jobs:
  streamlink-job:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install Streamlink and dependencies
        run: |
          pip install streamlink
          pip install cloudscraper

      - name: Connect to Cloudflare (Kick)
        id: cloudflare_kick
        run: |
          python - <<'EOF'
          import cloudscraper
          url = "https://kick.com/vortex-ktv"
          scraper = cloudscraper.create_scraper()
          resp = scraper.get(url)
          print("Cloudflare status:", resp.status_code)
          if resp.status_code != 200:
              exit(1)
          EOF

      - name: check stream (Kick)
        id: wait_stream_offline1
        run: |
          STREAM_URL="https://kick.com/vortex-ktv"
          echo "Checking stream status for $STREAM_URL"
          set +e
          if true; then
            STATUS_MSG=$(streamlink --json $STREAM_URL worst 2>&1)
            if echo "$STATUS_MSG" | grep -q "No playable streams found"; then
              echo "Stream is offline."
            else
              OUTFILE="/tmp/stream.ts"
              streamlink $STREAM_URL worst -o "$OUTFILE" > streamlink.log 2>&1 &
              STREAMLINK_PID=$!
              echo "Started streamlink with PID $STREAMLINK_PID"
              wait $STREAMLINK_PID
              EXIT_CODE=$?
              echo "Streamlink exited with code $EXIT_CODE"
              cat streamlink.log
              echo "$STATUS_MSG"
              echo "Stream is still online. Checking again in 60 seconds..."
              sleep 60
            fi
          fi
          set -e

      - name: Connect to Cloudflare (Twitch)
        id: cloudflare_twitch
        run: |
          python - <<'EOF'
          import cloudscraper
          url = "https://twitch.tv/vortex-ktv"
          scraper = cloudscraper.create_scraper()
          resp = scraper.get(url)
          print("Cloudflare status:", resp.status_code)
          if resp.status_code != 200:
              exit(1)
          EOF

      - name: check stream (Twitch)
        id: wait_stream_offline
        run: |
          STREAM_URL="https://twitch.tv/vortex-ktv"
          echo "Checking stream status for $STREAM_URL"
          set +e
          if true; then
            STATUS_MSG=$(streamlink --json $STREAM_URL worst 2>&1)
            if echo "$STATUS_MSG" | grep -q "No playable streams found"; then
              echo "Stream is offline."
            else
              OUTFILE="/tmp/stream.ts"
              streamlink $STREAM_URL worst -o "$OUTFILE" > streamlink.log 2>&1 &
              STREAMLINK_PID=$!
              echo "Started streamlink with PID $STREAMLINK_PID"
              wait $STREAMLINK_PID
              EXIT_CODE=$?
              echo "Streamlink exited with code $EXIT_CODE"
              cat streamlink.log
              echo "$STATUS_MSG"
              echo "Stream is still online. Checking again in 60 seconds..."
              sleep 60
            fi
          fi
          set -e
